#!/bin/zsh

# Create tag on the enterprise repo
# git tag -a v1 -m "v1"

# Show hash for tag
# git rev-list -n 1 v1 

# Enterprise repo tag and hash list
# v1 b2bef9525fe5c51e0f5c8c7ae5d680b39b7c4ad8

# Odoo Docker repo tag and hash list
# v1 odoo@sha256:27098953285743cdf4152b0c6f3678d573327b7d9acb61a2dffeb3224bcaa852 

# Tag the docker image
# docker tag b073a2f2d68c odoo:b073a2f2d68c

GIT_TAG=1
ODOO_VERSION=13.0
ODOO_PATHS=( "$(pwd)/enterprise" "$(pwd)/oca/web" "$(pwd)/oca/project" "$(pwd)/oca/timesheet" )
MODULES=($(awk -F= '{print $1}' managed_modules.txt))

for MODULE in "${MODULES[@]}"
do
    for ODOO_PATH in "${ODOO_PATHS[@]}"
    do
        MODULE_PATH="$ODOO_PATH/$MODULE"

        if [[ -d "$MODULE_PATH" ]]
        then
            # get version of module
            VERSION=$(grep 'version' "$MODULE_PATH/__manifest__.py" | sed "s;';\";g"  | sed "s/,//g" )
            VERSION=$(echo "{ $VERSION }" | jq .version | sed 's/"//g' | sed 's/null//g')

            # set default version
            [ -z "$VERSION" ] && VERSION=0.0

            # check if oca version or enterprise version
            if echo "$VERSION" | grep -q "^[0-9]\." 
            then
                VERSION=$ODOO_VERSION.$VERSION.$GIT_TAG
            fi

            # copy module to managed folder
            echo "Copy module $MODULE $VERSION to managed folder"
            mkdir -p managed-modules
            MANAGED_MODULE_PATH="managed-modules/$MODULE-$VERSION"
            cp -r $MODULE_PATH $MANAGED_MODULE_PATH

            # configure and zip module
            echo "Remove auto install option"
            sed -i '' -e "s/'auto_install': True,/'auto_install': False,/" $MANAGED_MODULE_PATH/__manifest__.py
            echo "zip module $MODULE"
            zip -q -r  $MANAGED_MODULE_PATH.zip $MANAGED_MODULE_PATH
        fi
    done
done